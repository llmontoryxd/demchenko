{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 172,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "L = 11, N = 6\n",
      "\u001b[1m11×3 DataFrame\u001b[0m\n",
      "\u001b[1m Row \u001b[0m│\u001b[1m X       \u001b[0m\u001b[1m analytical \u001b[0m\u001b[1m numerical \u001b[0m\n",
      "\u001b[1m     \u001b[0m│\u001b[90m Float64 \u001b[0m\u001b[90m Float64    \u001b[0m\u001b[90m Float64   \u001b[0m\n",
      "─────┼────────────────────────────────\n",
      "   1 │     0.0     1.71828    1.71828\n",
      "   2 │     0.1     1.81828    1.81828\n",
      "   3 │     0.2     1.91828    1.91516\n",
      "   4 │     0.3     2.01828    2.01516\n",
      "   5 │     0.4     2.11828    2.1126\n",
      "   6 │     0.5     2.21828    2.2126\n",
      "   7 │     0.6     2.31828    2.31051\n",
      "   8 │     0.7     2.41828    2.41051\n",
      "   9 │     0.8     2.51828    2.5088\n",
      "  10 │     0.9     2.61828    2.6088\n",
      "  11 │     1.0     2.71828    2.7074\n",
      "max_diff = 0.010886647828473706\n",
      "\n",
      "L = 21, N = 11\n",
      "\u001b[1m11×3 DataFrame\u001b[0m\n",
      "\u001b[1m Row \u001b[0m│\u001b[1m X       \u001b[0m\u001b[1m analytical \u001b[0m\u001b[1m numerical \u001b[0m\n",
      "\u001b[1m     \u001b[0m│\u001b[90m Float64 \u001b[0m\u001b[90m Float64    \u001b[0m\u001b[90m Float64   \u001b[0m\n",
      "─────┼────────────────────────────────\n",
      "   1 │     0.0     1.71828    1.71828\n",
      "   2 │     0.1     1.81828    1.81786\n",
      "   3 │     0.2     1.91828    1.91748\n",
      "   4 │     0.3     2.01828    2.01714\n",
      "   5 │     0.4     2.11828    2.11683\n",
      "   6 │     0.5     2.21828    2.21654\n",
      "   7 │     0.6     2.31828    2.31629\n",
      "   8 │     0.7     2.41828    2.41606\n",
      "   9 │     0.8     2.51828    2.51585\n",
      "  10 │     0.9     2.61828    2.61566\n",
      "  11 │     1.0     2.71828    2.71549\n",
      "max_diff = 0.0027924584943641584\n",
      "\n",
      "L = 41, N = 21\n",
      "\u001b[1m11×3 DataFrame\u001b[0m\n",
      "\u001b[1m Row \u001b[0m│\u001b[1m X       \u001b[0m\u001b[1m analytical \u001b[0m\u001b[1m numerical \u001b[0m\n",
      "\u001b[1m     \u001b[0m│\u001b[90m Float64 \u001b[0m\u001b[90m Float64    \u001b[0m\u001b[90m Float64   \u001b[0m\n",
      "─────┼────────────────────────────────\n",
      "   1 │     0.0     1.71828    1.71828\n",
      "   2 │     0.1     1.81828    1.81818\n",
      "   3 │     0.2     1.91828    1.91808\n",
      "   4 │     0.3     2.01828    2.01799\n",
      "   5 │     0.4     2.11828    2.11791\n",
      "   6 │     0.5     2.21828    2.21784\n",
      "   7 │     0.6     2.31828    2.31778\n",
      "   8 │     0.7     2.41828    2.41772\n",
      "   9 │     0.8     2.51828    2.51767\n",
      "  10 │     0.9     2.61828    2.61762\n",
      "  11 │     1.0     2.71828    2.71757\n",
      "max_diff = 0.0007070166649585374\n",
      "\n",
      "L = 81, N = 41\n",
      "\u001b[1m11×3 DataFrame\u001b[0m\n",
      "\u001b[1m Row \u001b[0m│\u001b[1m X       \u001b[0m\u001b[1m analytical \u001b[0m\u001b[1m numerical \u001b[0m\n",
      "\u001b[1m     \u001b[0m│\u001b[90m Float64 \u001b[0m\u001b[90m Float64    \u001b[0m\u001b[90m Float64   \u001b[0m\n",
      "─────┼────────────────────────────────\n",
      "   1 │     0.0     1.71828    1.71828\n",
      "   2 │     0.1     1.81828    1.81826\n",
      "   3 │     0.2     1.91828    1.91823\n",
      "   4 │     0.3     2.01828    2.01821\n",
      "   5 │     0.4     2.11828    2.11819\n",
      "   6 │     0.5     2.21828    2.21817\n",
      "   7 │     0.6     2.31828    2.31815\n",
      "   8 │     0.7     2.41828    2.41814\n",
      "   9 │     0.8     2.51828    2.51813\n",
      "  10 │     0.9     2.61828    2.61811\n",
      "  11 │     1.0     2.71828    2.7181\n",
      "max_diff = 0.00017786996126556431\n",
      "\n",
      "L = 161, N = 81\n",
      "\u001b[1m11×3 DataFrame\u001b[0m\n",
      "\u001b[1m Row \u001b[0m│\u001b[1m X       \u001b[0m\u001b[1m analytical \u001b[0m\u001b[1m numerical \u001b[0m\n",
      "\u001b[1m     \u001b[0m│\u001b[90m Float64 \u001b[0m\u001b[90m Float64    \u001b[0m\u001b[90m Float64   \u001b[0m\n",
      "─────┼────────────────────────────────\n",
      "   1 │     0.0     1.71828    1.71828\n",
      "   2 │     0.1     1.81828    1.81828\n",
      "   3 │     0.2     1.91828    1.91827\n",
      "   4 │     0.3     2.01828    2.01826\n",
      "   5 │     0.4     2.11828    2.11826\n",
      "   6 │     0.5     2.21828    2.21825\n",
      "   7 │     0.6     2.31828    2.31825\n",
      "   8 │     0.7     2.41828    2.41825\n",
      "   9 │     0.8     2.51828    2.51824\n",
      "  10 │     0.9     2.61828    2.61824\n",
      "  11 │     1.0     2.71828    2.71824\n",
      "max_diff = 4.4607147105857337e-5\n",
      "\n",
      "L = 321, N = 161\n",
      "\u001b[1m11×3 DataFrame\u001b[0m\n",
      "\u001b[1m Row \u001b[0m│\u001b[1m X       \u001b[0m\u001b[1m analytical \u001b[0m\u001b[1m numerical \u001b[0m\n",
      "\u001b[1m     \u001b[0m│\u001b[90m Float64 \u001b[0m\u001b[90m Float64    \u001b[0m\u001b[90m Float64   \u001b[0m\n",
      "─────┼────────────────────────────────\n",
      "   1 │     0.0     1.71828    1.71828\n",
      "   2 │     0.1     1.81828    1.81828\n",
      "   3 │     0.2     1.91828    1.91828\n",
      "   4 │     0.3     2.01828    2.01828\n",
      "   5 │     0.4     2.11828    2.11828\n",
      "   6 │     0.5     2.21828    2.21827\n",
      "   7 │     0.6     2.31828    2.31827\n",
      "   8 │     0.7     2.41828    2.41827\n",
      "   9 │     0.8     2.51828    2.51827\n",
      "  10 │     0.9     2.61828    2.61827\n",
      "  11 │     1.0     2.71828    2.71827\n",
      "max_diff = 1.1169255038190329e-5\n",
      "\n",
      "L = 641, N = 321\n",
      "\u001b[1m11×3 DataFrame\u001b[0m\n",
      "\u001b[1m Row \u001b[0m│\u001b[1m X       \u001b[0m\u001b[1m analytical \u001b[0m\u001b[1m numerical \u001b[0m\n",
      "\u001b[1m     \u001b[0m│\u001b[90m Float64 \u001b[0m\u001b[90m Float64    \u001b[0m\u001b[90m Float64   \u001b[0m\n",
      "─────┼────────────────────────────────\n",
      "   1 │     0.0     1.71828    1.71828\n",
      "   2 │     0.1     1.81828    1.81828\n",
      "   3 │     0.2     1.91828    1.91828\n",
      "   4 │     0.3     2.01828    2.01828\n",
      "   5 │     0.4     2.11828    2.11828\n",
      "   6 │     0.5     2.21828    2.21828\n",
      "   7 │     0.6     2.31828    2.31828\n",
      "   8 │     0.7     2.41828    2.41828\n",
      "   9 │     0.8     2.51828    2.51828\n",
      "  10 │     0.9     2.61828    2.61828\n",
      "  11 │     1.0     2.71828    2.71828\n",
      "max_diff = 2.7944979827942973e-6\n",
      "\n",
      "L = 1281, N = 641\n",
      "\u001b[1m11×3 DataFrame\u001b[0m\n",
      "\u001b[1m Row \u001b[0m│\u001b[1m X       \u001b[0m\u001b[1m analytical \u001b[0m\u001b[1m numerical \u001b[0m\n",
      "\u001b[1m     \u001b[0m│\u001b[90m Float64 \u001b[0m\u001b[90m Float64    \u001b[0m\u001b[90m Float64   \u001b[0m\n",
      "─────┼────────────────────────────────\n",
      "   1 │     0.0     1.71828    1.71828\n",
      "   2 │     0.1     1.81828    1.81828\n",
      "   3 │     0.2     1.91828    1.91828\n",
      "   4 │     0.3     2.01828    2.01828\n",
      "   5 │     0.4     2.11828    2.11828\n",
      "   6 │     0.5     2.21828    2.21828\n",
      "   7 │     0.6     2.31828    2.31828\n",
      "   8 │     0.7     2.41828    2.41828\n",
      "   9 │     0.8     2.51828    2.51828\n",
      "  10 │     0.9     2.61828    2.61828\n",
      "  11 │     1.0     2.71828    2.71828\n",
      "max_diff = 6.988975793653651e-7\n",
      "\n"
     ]
    }
   ],
   "source": [
    "using DataFrames\n",
    "using CSV\n",
    "\n",
    "function analytical(x, t)\n",
    "    return exp(t) + x - t\n",
    "end\n",
    "\n",
    "m = 0\n",
    "sigma = 2\n",
    "touch(\"6sem_lab4_solution.txt\")\n",
    "stream = open(\"6sem_lab4_solution.txt\", \"w\")\n",
    "\n",
    "for iter = 1:8\n",
    "    L = 10*2^m + 1\n",
    "    N = Integer(round((L - 1)/sigma, digits = 0)) + 1\n",
    "    t = LinRange(0, 1, N)\n",
    "    x = LinRange(0, 1, L)\n",
    "    diff = zeros(Float64, (1, L))\n",
    "    h = 1/(L-1)\n",
    "    tau = h*sigma\n",
    "\n",
    "    u = zeros(Float64, (N, L))\n",
    "\n",
    "    for i = 1:L\n",
    "        u[1,i] = x[i] + 1\n",
    "    end\n",
    "\n",
    "    for i = 2:N\n",
    "        u[i, 1] = exp(t[i]) - t[i]\n",
    "        u[i, 2] = exp(t[i]) - t[i] + h\n",
    "    end\n",
    "\n",
    "    for n = 1:(N-1)\n",
    "        for l = 3:L\n",
    "            u[n + 1, l] = u[n, l] + tau/(2*h)*(-u[n, l-2] + 4*u[n, l-1] - 3*u[n, l]) + tau^2/(2*h^2) * (u[n, l-2] - 2*u[n, l-1] + u[n, l]) + tau * exp(t[n]) * (1+tau/2)\n",
    "        end\n",
    "    end\n",
    "\n",
    "\n",
    "    analytical_solution = zeros(Float64, (1, L))\n",
    "    for i = 1:L\n",
    "        analytical_solution[i] = analytical(x[i], 1)\n",
    "        diff[i] = abs(analytical(x[i], 1) - u[N, i])\n",
    "    end\n",
    "\n",
    "\n",
    "    xx = zeros(Float64, (1, 11))\n",
    "    aa = zeros(Float64, (1, 11))\n",
    "    uu = zeros(Float64, (1, 11))\n",
    "    err = zeros(Float64, (1, 11))\n",
    "    k = Integer((L - 1) / 10)\n",
    "    write(stream, \"L = \"*string(L)*\", N = \"*string(N)*\"\\n\")\n",
    "    write(stream, \"x      \"*\"analytical     \"*\"numerical            \"*\"err\"*\"\\n\")\n",
    "    for i = 1:11\n",
    "        xx[i] = x[k*(i-1) + 1]\n",
    "        aa[i] = analytical_solution[k*(i-1) + 1]\n",
    "        uu[i] = u[N, k*(i-1) + 1]\n",
    "        err[i] = abs(uu[i] - aa[i])\n",
    "        write(stream, string(xx[i])*\" | \"*string(round(aa[i], digits = 9))*\" | \"*string(round(uu[i], digits = 9))*\" | \"*string(err[i])*\"\\n\")\n",
    "    end\n",
    "    print(\"L = \", L, \", N = \", N, \"\\n\")\n",
    "    df = DataFrame(X = vec(xx), analytical = vec(aa), numerical = vec(uu))\n",
    "    print(df)\n",
    "\n",
    "    print(\"\\n\",\"max_diff = \", maximum(err), \"\\n\", \"\\n\")\n",
    "    write(stream, \"max_diff = \"*string(maximum(err))*\"\\n\"*\"\\n\"*\"\\n\")\n",
    "    \n",
    "    m += 1\n",
    "end\n",
    "\n",
    "close(stream)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1.818"
     ]
    }
   ],
   "source": [
    "print(round(uu[2], digits = 3))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Julia 1.5.3",
   "language": "julia",
   "name": "julia-1.5"
  },
  "language_info": {
   "file_extension": ".jl",
   "mimetype": "application/julia",
   "name": "julia",
   "version": "1.5.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
